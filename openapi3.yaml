openapi: 3.0.1
info:
  title: Catalog Web App BFF
  description: BFF API for catalog (web) UI
  version: 1.27.10
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: http://localhost:8080
paths:
  /graphql:
    get:
      operationId: graphqlPlayground
      tags:
        - GraphQL
      summary: retrieve the GraphQL playground
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/acceptall'
    post:
      operationId: graphqlFetchData
      tags:
        - GraphQL
      summary: fetch deta from GraphQL server
      requestBody:
        description: data to retrieve from server
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/graphqlBody'
      responses:
        '200':
          description: graphqlFetchData
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/acceptall'
  /file:
    get:
      tags:
        - File APIs
      summary: Get stream file by path
      parameters:
        - name: path
          in: query
          required: true
          schema:
            type: string
        - name: type
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  files:
                    type: array
                    items:
                      type: string
    # /* FOR UPLOAD API */
    # post:
    #   tags:
    #     - File APIs
    #   summary: Write stream file to path
    #   parameters:
    #     - name: path
    #       in: query
    #       required: true
    #       schema:
    #         type: string
    #     - name: type
    #       in: query
    #       required: true
    #       schema:
    #         type: string
    #   requestBody:
    #     required: true
    #     content:
    #       multipart/form-data:
    #         schema:
    #           type: object
    #           properties:
    #             file:
    #               type: string
    #               format: binary
    #           required:
    #             - file
    #       application/octet-stream:
    #         schema:
    #           type: string
    #           format: binary
    #   responses:
    #     200:
    #       description: Successful response
    #       content:
    #         application/json:
    #           schema:
    #             type: object
    #             properties:
    #               files:
    #                 type: array
    #                 items:
    #                   type: string

components:
  schemas:
    acceptall:
      type: object
      additionalProperties: {}
    graphqlBody:
      type: object
      properties:
        operationName:
          type: string
        variables:
          type: object
        query:
          type: string
